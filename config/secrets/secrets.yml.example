# Secret Management Configuration
# This file contains templates and examples for managing secrets
# NEVER commit actual secrets to version control

# Vault Configuration (recommended for production)
vault:
  enabled: true
  address: "https://vault.example.com:8200"
  auth_method: "kubernetes"  # or "ldap", "userpass"
  secret_path: "secret/openstack"
  
  # Secret paths
  secrets:
    db_passwords: "secret/openstack/database"
    service_passwords: "secret/openstack/services"
    ssl_certificates: "secret/openstack/ssl"
    api_keys: "secret/openstack/api"

# Environment Variables (for development/testing)
# Set these environment variables instead of hardcoding values
environment_variables:
  # Database Passwords
  - "MYSQL_ROOT_PASSWORD"
  - "KEYSTONE_DB_PASSWORD"
  - "NOVA_DB_PASSWORD"
  - "NEUTRON_DB_PASSWORD"
  - "CINDER_DB_PASSWORD"
  - "GLANCE_DB_PASSWORD"
  - "HORIZON_DB_PASSWORD"
  
  # Service Passwords
  - "KEYSTONE_ADMIN_PASSWORD"
  - "NOVA_SERVICE_PASSWORD"
  - "NEUTRON_SERVICE_PASSWORD"
  - "CINDER_SERVICE_PASSWORD"
  - "GLANCE_SERVICE_PASSWORD"
  - "PLACEMENT_SERVICE_PASSWORD"
  
  # RabbitMQ Credentials
  - "RABBITMQ_USER"
  - "RABBITMQ_PASSWORD"
  
  # Memcached Configuration
  - "MEMCACHED_PASSWORD"
  
  # SSL Certificates
  - "SSL_CERT_CONTENT"
  - "SSL_KEY_CONTENT"
  - "CA_CERT_CONTENT"

# Ansible Vault Configuration
ansible_vault:
  vault_file: "group_vars/all/vault.yml"
  vault_password_file: ".vault_pass"
  
  # Encrypted variables structure
  encrypted_vars:
    - "vault_mysql_root_password"
    - "vault_keystone_admin_password"
    - "vault_service_passwords"
    - "vault_ssl_certificates"

# Kubernetes Secrets (if deploying on K8s)
kubernetes_secrets:
  namespace: "openstack"
  secrets:
    - name: "openstack-db-secrets"
      type: "Opaque"
      data:
        - "mysql-root-password"
        - "keystone-db-password"
        - "nova-db-password"
        
    - name: "openstack-service-secrets"
      type: "Opaque"
      data:
        - "keystone-admin-password"
        - "nova-service-password"
        - "neutron-service-password"
        
    - name: "openstack-ssl-certs"
      type: "kubernetes.io/tls"
      data:
        - "tls.crt"
        - "tls.key"

# AWS Secrets Manager (for AWS deployments)
aws_secrets:
  region: "us-west-2"
  secrets:
    - name: "openstack/database/passwords"
      description: "Database passwords for OpenStack services"
      
    - name: "openstack/service/passwords"
      description: "Service passwords for OpenStack components"
      
    - name: "openstack/ssl/certificates"
      description: "SSL certificates for OpenStack endpoints"

# Azure Key Vault (for Azure deployments)
azure_keyvault:
  vault_name: "openstack-secrets"
  resource_group: "openstack-rg"
  secrets:
    - name: "mysql-root-password"
    - name: "keystone-admin-password"
    - name: "ssl-certificate"

# Best Practices for Secret Management
best_practices:
  - "Use external secret management systems (Vault, AWS Secrets Manager, etc.)"
  - "Rotate secrets regularly using automated processes"
  - "Use least privilege access for secret retrieval"
  - "Audit secret access and usage"
  - "Never log or print secrets in plain text"
  - "Use encrypted communication channels for secret transmission"
  - "Implement secret scanning in CI/CD pipelines"
  - "Use different secrets for different environments"

# Secret Rotation Configuration
rotation:
  enabled: true
  schedule: "0 2 1 * *"  # Monthly at 2 AM on the 1st
  services_to_restart:
    - "apache2"
    - "memcached"
    - "mysql"
    - "rabbitmq-server"
  notification:
    enabled: true
    webhook_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
